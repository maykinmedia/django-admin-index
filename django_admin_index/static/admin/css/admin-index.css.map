{"version":3,"sources":["_django22.scss","components/_containers.scss","components/_header.scss","components/_dropdown-menu.scss","_vars.scss"],"names":[],"mappings":"AAGA,SAGE,iBAAA,CACA,UCFF,WAGE,eAAA,CACA,YAGF,MAIE,UAGF,QACE,UAGF,aACE,wCCRF,QACE,eAAA,CACA,KAAA,CAEA,iBCFF,oBAQE,eAAA,CAGA,aAAA,CACA,gDAVS,QACP,cAAA,CAEA,iBASF,8CACE,oBAAA,CACA,iBAAA,CACA,YAAA,CACA,2CCtBU,CDuBV,eAzBF,uJA4BI,gDAGF,sDACE,mEAhCJ,+KAmCM,oBAAA,CACA,wDAKJ,wGAEE,kEA3CJ,kVA8CM,8BAAA,CACA,uDAGF,4JACE,cAKN,8CACE,YAAA,CAGA,iBAAA,CACA,MAAA,CACA,QAAA,CACA,eAAA,CACA,SAAA,CAGA,eAAA,CACA,eAAA,CAGA,iEC9De,CD+Df,kEAIF,mDAEE,6BAEA,2DACE,wEAIF,kHAEE,uEAvFJ,oMA6FM,8EAGF,mEACE,qBAKN,8CACE,aAAA,CACA,aAMJ,yBAGE,aACE,iBAAA,CACA,UAGF,oBACE,sBAEA,8CACE","file":"admin-index.css","sourceRoot":"../../../../scss","sourcesContent":["/*\nDjango 2.2 specific fixes\n */\n#content {\n  // fix the filter bar on the right being layered over the header.\n  // header has z-index: 2 so within the stack context this layers on top now.\n  position: relative;\n  z-index: 1;\n}\n","/*\nOverride some containers to make the sticky header work with Django.\n */\n@import '../vars';\n\n#container {\n  // Django itself sets height: 100%, which causes the container to be less high than\n  // the content and that in turn causes the sticky header to fall off the page.\n  min-height: 100%;\n  height: auto;\n}\n\n#main {\n  // z-index is contextual, by specifying it explicitly here, we can have our header\n  // use z-index relative to this one without having to fiddle with #main child element\n  // z-indices.\n  z-index: 1;\n}\n\n#header {\n  z-index: 2; // overlay the #main container, which contains the sidebar on Django 3.2+\n}\n\n#nav-sidebar {\n  top: $djai-nav-sidebar-offset;\n}\n","/*\nThe header is the container for our admin-index menu dropdown, which we make\nvisible at all times. For this, the header itself needs to receive a position fixes or\nsticky so that it stays in view when scrolling down vertically.\n\nIf the header itself is sticky and the container for the dropdowns, we don't need to\nmess with height offsets relative to the header/branding - which may not be pixel-\nperfect because of font-rendering shenanigans.\n\nWe also stick to Django's flexbox model for the header and don't force it into a CSS\ngrid layout. (TODO: check on 2.2 what the CSS looks like).\n\nTODO: future enhancement -> control position of header/admin menu via CSS var, so users\nhave the option to easily specify static/sticky positioning.\n */\n\n#header {\n  position: sticky;\n  top: 0;\n  // the dropdown menu is a child and overflows\n  overflow: visible;\n}\n","/*\nThe dropdown menu is injected as a child into the header, which has a flexbox display\nstyle (direction: row). This causes the menu to be on the same row as the branding and\nuser tools. However, we set the flex-basis to 100% to make it take up the full width\nof the container and let the parent wrap.\n */\n@import '../vars';\n\n$djai-block: 'djai-dropdown-menu';\n\n\n@mixin link-style() {\n  &, &:link, &:visited {\n    @content;\n  }\n}\n\n\n.#{$djai-block} {\n  // position it properly in the header as a separate row\n  @at-root #header {\n    flex-wrap: wrap;\n    // remove the padding at the bottom so our dropdown items line up\n    padding-bottom: 0;\n  }\n\n  flex-basis: 100%;\n\n  // own layout\n  display: block;\n  margin-top: $djai-tablist-spacing-top;\n\n  & &__item {\n    display: inline-block;\n    position: relative;\n    padding: 10px;\n    background-color: $djai-tab-bg;\n    cursor: pointer;\n\n    @include link-style {\n      color: $djai-tab-fg;\n    }\n\n    &--active {\n      background-color: $djai-tab-bg--active;\n\n      @include link-style {\n        text-decoration: none;\n        color: $djai-tab-fg--active;\n      }\n    }\n\n    // deliberately after the --active style so it overrides it\n    &:hover,\n    &:focus {\n      background-color: $djai-tab-bg--hover;\n\n      @include link-style {\n        text-decoration: none !important;\n        color: $djai-tab-fg--hover;\n      }\n\n      .#{$djai-block}__drop {\n        display: block;\n      }\n    }\n  }\n\n  & &__drop {\n    display: none; // hidden by default, visible by hovering over the parent\n\n    // position it relative to the tab\n    position: absolute;\n    left: 0;\n    top: 100%;\n    min-width: 150px;\n    z-index: 1;\n\n    // ensure that very long lists have scrollable content\n    max-height: 75vh;\n    overflow-y: auto;\n\n    // theme\n    background-color: $djai-dropdown-bg;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),\n                0 6px 20px 0 rgba(0, 0, 0, 0.2);\n  }\n\n  & &__drop-item {\n\n    background-color: transparent;  // take the bg color of the dropdown block\n\n    &--active {\n      background-color: $djai-dropdown-bg--active;\n    }\n\n    // deliberately after the --active style so it overrides it\n    &:hover,\n    &:focus {\n      background-color: $djai-dropdown-bg--hover;\n    }\n\n    // force a more specific rule so our own color overrides are used\n    @at-root #header & a {\n      @include link-style {\n        color: $djai-dropdown-fg;\n      }\n\n      &:hover {\n        text-decoration: none;\n      }\n    }\n  }\n\n  & &__link {\n    display: block;\n    padding: 10px;\n  }\n\n}\n\n// mobile styling\n@media (max-width: $djai-breakpoint--mobile) {\n  // ensure that the dropdown menus are on top of the breadcrumbs instead of hidden\n  // behind them. The #header element has z-index 2.\n  .breadcrumbs {\n    position: relative;\n    z-index: 1;\n  }\n\n  .#{$djai-block} {\n    align-self: flex-start;  // don't center, but align left\n\n    & &__item {\n      margin-top: 3px;\n    }\n  }\n}\n","// Define SASS variables which emit the CSS variables from Django 3.2 with a default\n// value for Django 2.2. Once support is dropped for Django 2.2, we can remove the\n// defaults as Django itself defines these variables in `admin/css/base.css`.\n\n$color-primary: var(--primary, #79aec8);\n$color-secondary: var(--secondary, #417690);\n$color-primary-fg: var(--primary-fg, #fff);\n\n$color-header-link-color: var(--header-link-color, #{$color-primary-fg});\n\n/* admin-index specific variables */\n// default of 10px is the padding-bottom default of the header\n$djai-tablist-spacing-top: var(--djai-tablist-spacing-top, 10px);\n\n$djai-tab-bg: var(--djai-tab-bg, #4383a3);\n$djai-tab-bg--active: var(--djai-tab-bg--active, #{$color-primary});\n$djai-tab-bg--hover: var(--djai-tab-bg--hover, #{$color-primary});\n$djai-tab-fg: var(--djai-tab-fg, #{$color-primary-fg});\n$djai-tab-fg--active: var(--djai-tab-fg--active, #{$color-primary-fg});\n$djai-tab-fg--hover: var(--djai-tab-fg--hover, #{$color-primary-fg});\n\n$djai-dropdown-bg: var(--djai-dropdown-bg, #{$color-secondary});\n$djai-dropdown-bg--active: var(--djai-dropdown-bg--active, #{$color-primary});\n$djai-dropdown-bg--hover: var(--djai-dropdown-bg--hover, #{$color-primary});\n$djai-dropdown-fg: var(--djai-dropdown-fg, #{$color-header-link-color});\n\n// compensate for the sticky header by offsetting the nav sidebar. Default values\n// come from a clean django-startproject on Django 3.2 with the standard admin CSS.\n// If you use different fonts/paddings... etc, you can override this variable for your\n// own situation.\n$default-nav-sidebar-offset: 10px + 28px + 46px;  // heading padding top + branding height + dropdown-menu\n$djai-nav-sidebar-offset: var(--djai-nav-sidebar-offset, #{$default-nav-sidebar-offset});\n\n/*\n  Responsive styling. Breakpoints are taken from Django 3.2 admin/css/responsive.css\n*/\n$djai-breakpoint--mobile: 767px;\n$djai-breakpoint--tablet: 1024px;\n"]}